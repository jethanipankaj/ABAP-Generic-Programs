<?xml version="1.0" encoding="utf-8"?>
<nugget name="EMAIL_TRIGGER_USING_BRF_CONTENT_IN_MDG">
 <CLAS CLSNAME="YCL_MD00_TRIGGER_EMAIL" VERSION="1" LANGU="E" DESCRIPT="Triggering Email" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <types CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="LTY_EMAIL_CONTENT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="9 " SRCCOLUMN1="4 " SRCROW2="14 " SRCCOLUMN2="29 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF lty_email_content,
        langu      TYPE spras,
        system     TYPE text,
        input_type TYPE text,
        content    TYPE text255,
      END OF lty_email_content
"/>
  <types CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="LTT_EMAIL_CONTENT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " TYPTYPE="4" SRCROW1="16 " SRCCOLUMN1="4 " SRCROW2="16 " SRCCOLUMN2="52 " TYPESRC_LENG="0 " TYPESRC="ltt_email_content TYPE TABLE OF lty_email_content
"/>
  <types CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="LTY_EMAIL_ADDR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " TYPTYPE="4" SRCROW1="18 " SRCCOLUMN1="4 " SRCROW2="20 " SRCCOLUMN2="26 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF lty_email_addr,
        email TYPE ad_smtpadr,
      END OF lty_email_addr
"/>
  <types CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="LTT_EMAIL_ADDR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " TYPTYPE="4" SRCROW1="22 " SRCCOLUMN1="4 " SRCROW2="22 " SRCCOLUMN2="46 " TYPESRC_LENG="0 " TYPESRC="ltt_email_addr TYPE TABLE OF lty_email_addr
"/>
  <types CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="LTY_CR_STAT_DESC" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " TYPTYPE="4" SRCROW1="24 " SRCCOLUMN1="4 " SRCROW2="27 " SRCCOLUMN2="28 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF lty_cr_stat_desc,
        langu	TYPE spras,
        txtmi	TYPE usmd_txtmi,
      END OF lty_cr_stat_desc
"/>
  <types CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="LTT_CR_STAT_DESC" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " TYPTYPE="4" SRCROW1="29 " SRCCOLUMN1="4 " SRCROW2="29 " SRCCOLUMN2="50 " TYPESRC_LENG="0 " TYPESRC="ltt_cr_stat_desc TYPE TABLE OF lty_cr_stat_desc
"/>
  <types CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="LTY_SALESLINE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " TYPTYPE="4" SRCROW1="31 " SRCCOLUMN1="4 " SRCROW2="33 " SRCCOLUMN2="30 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF lty_salesline,
             sales TYPE zsales,
           END OF lty_salesline
"/>
  <types CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="LTT_SALESLINE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="8 " TYPTYPE="4" SRCROW1="35 " SRCCOLUMN1="4 " SRCROW2="35 " SRCCOLUMN2="44 " TYPESRC_LENG="0 " TYPESRC="ltt_salesline TYPE TABLE OF lty_salesline
"/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="CREQUEST_NUMBER" VERSION="1" LANGU="E" DESCRIPT="Change Request" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="USMD_CREQUEST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GC_APM" VERSION="1" LANGU="E" DESCRIPT="Team" EXPOSURE="0" STATE="1" EDITORDER="10 " ATTDECLTYP="2" ATTVALUE="&apos;APM&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZTEAM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GC_APR" VERSION="1" LANGU="E" DESCRIPT="Text field" EXPOSURE="0" STATE="1" EDITORDER="15 " ATTDECLTYP="2" ATTVALUE="&apos;APR&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TEXT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GC_COM" VERSION="1" LANGU="E" DESCRIPT="Text field" EXPOSURE="0" STATE="1" EDITORDER="14 " ATTDECLTYP="2" ATTVALUE="&apos;COM&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TEXT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GC_FOOTER" VERSION="1" LANGU="E" DESCRIPT="Text field" EXPOSURE="2" STATE="1" EDITORDER="13 " ATTDECLTYP="2" ATTVALUE="&apos;FOOTER&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TEXT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GC_IMAGE" VERSION="1" LANGU="E" DESCRIPT="Text field" EXPOSURE="0" STATE="1" EDITORDER="12 " ATTDECLTYP="2" ATTVALUE="&apos;IMAGE&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TEXT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GC_LKM" VERSION="1" LANGU="E" DESCRIPT="Team" EXPOSURE="0" STATE="1" EDITORDER="8 " ATTDECLTYP="2" ATTVALUE="&apos;LKM&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZTEAM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GC_OBS" VERSION="1" LANGU="E" DESCRIPT="Team" EXPOSURE="0" STATE="1" EDITORDER="7 " ATTDECLTYP="2" ATTVALUE="&apos;OBS&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZTEAM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GC_REQ" VERSION="1" LANGU="E" DESCRIPT="Team" EXPOSURE="0" STATE="1" EDITORDER="9 " ATTDECLTYP="2" ATTVALUE="&apos;REQ&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZTEAM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GC_SUBJECT" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="11 " ATTDECLTYP="2" ATTVALUE="&apos;SUBJECT&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GO_APPL_LOG" VERSION="1" LANGU="E" DESCRIPT="Write Application Log" EXPOSURE="0" STATE="1" EDITORDER="17 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="YCL_MD00_WRITE_APPL_LOG" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GO_MIME_HELPER" VERSION="1" LANGU="E" DESCRIPT="Help Class for Multipart/Related in Business Workplace" EXPOSURE="0" STATE="1" EDITORDER="4 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_GBT_MULTIRELATED_SERVICE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GT_MESSAGE" VERSION="1" LANGU="E" DESCRIPT="Return table" EXPOSURE="0" STATE="1" EDITORDER="18 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BAPIRET2_T" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GT_SALESLINE" VERSION="1" LANGU="E" DESCRIPT="Sales Line Table" EXPOSURE="0" STATE="1" EDITORDER="6 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="LTT_SALESLINE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GV_CRTYPE" VERSION="1" LANGU="E" DESCRIPT="Type of Change Request" EXPOSURE="0" STATE="1" EDITORDER="19 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="USMD_CREQUEST_TYPE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GV_REASON" VERSION="1" LANGU="E" DESCRIPT="Reason" EXPOSURE="0" STATE="1" EDITORDER="5 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="USMD_REASON" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GV_USER_RECEIPT" VERSION="1" LANGU="E" DESCRIPT="User Name in User Master Record" EXPOSURE="0" STATE="1" EDITORDER="16 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="XUBNAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="SERVICE_NAME" VERSION="1" LANGU="E" DESCRIPT="Service Name" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="USMD_SERVICE_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="VENDOR_NO" VERSION="1" LANGU="E" DESCRIPT="Account Number of Vendor or Creditor" EXPOSURE="0" STATE="1" EDITORDER="3 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="LIFNR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="BUILD_EMAIL_CONTENT" VERSION="1" LANGU="E" DESCRIPT="Build Email Subject, Body &amp; Image" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="BUILD_EMAIL_CONTENT" SCONAME="ET_BODY" VERSION="1" LANGU="E" DESCRIPT="Text Table" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BCSY_TEXT"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="BUILD_EMAIL_CONTENT" SCONAME="EV_SUBJECT" VERSION="1" LANGU="E" DESCRIPT="Comment" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="CHAR50"/>
   <source>METHOD build_email_content.
  DATA : lv_name           TYPE text60,
         lt_notes          TYPE usmd_t_crequest_note,
         lt_content_body   TYPE ltt_email_content,
         lt_content_footer TYPE ltt_email_content,
         ls_content        TYPE lty_email_content,
         lv_cr             TYPE usmd_crequest,
         ls_crequest       TYPE usmd_s_crequest,
         lt_cr_status	     TYPE ltt_cr_stat_desc,
         lt_content_tmp    TYPE ltt_email_content,
         lt_body           TYPE bcsy_text,
         lv_supp_no        TYPE lifnr,
         lv_reason_desc    TYPE usmd_txtmi,
         lv_subject        TYPE text100.


  &quot;Remove leading Zeros Crequest
  CALL FUNCTION &apos;CONVERSION_EXIT_ALPHA_OUTPUT&apos;
    EXPORTING
      input  = crequest_number
    IMPORTING
      output = lv_cr.

  &quot;Get Crequest Data
  get_crequest_data(
    IMPORTING
      ev_name  = lv_name  &quot; Text field
      et_notes = lt_notes &quot; Change Request Note
      es_crequest = ls_crequest
      et_cr_status = lt_cr_status
      ev_vendor_no = lv_supp_no
      ev_reason_desc = lv_reason_desc
  ).

  &quot;Get Email Content from BRF+ Table EMAIL_CONTENT
  get_email_content_from_brf(
    IMPORTING
      et_content = lt_content_body
  ).
  IF lt_content_body IS INITIAL.
    get_email_content_from_brf(
    EXPORTING
      iv_servicename = CONV #( service_name )
      IMPORTING
        et_content = lt_content_body
    ).
  ENDIF.
  &quot;Get Email Footer from BRF+ Table EMAIL_CONTENT
  get_email_content_from_brf(
    EXPORTING
      iv_servicename = gc_footer
    IMPORTING
      et_content = lt_content_footer
  ).

  &quot;Build Subject.
  READ TABLE lt_content_body INTO ls_content WITH KEY input_type = gc_subject.
  IF sy-subrc EQ 0.
    lv_subject = ls_content-content.
    REPLACE ALL OCCURRENCES OF &apos;&lt;CREQUEST&gt;&apos; IN lv_subject WITH lv_cr.
    REPLACE ALL OCCURRENCES OF &apos;&lt;SUPP_NO&gt;&apos; IN lv_subject WITH lv_supp_no.
    REPLACE ALL OCCURRENCES OF &apos;&lt;CR_REASON&gt;&apos; IN lv_subject WITH lv_reason_desc.
    ev_subject = lv_subject.
  ENDIF.

  &quot;Get Images to be processed.
  get_image_for_body( it_content_body = lt_content_body ).

  &quot;Building EMail Body
  APPEND &apos;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xmlns:xfa=&quot;http://www.xfa.org/schema/xfa-template/2.1/&quot;&gt;&lt;head&gt;&lt;/head&gt;&apos; TO et_body.
  APPEND &apos;&lt;body&gt;&lt;p&gt;&apos; TO et_body.

  &quot;Get laguages to be processed.
  lt_content_tmp = lt_content_body.
  SORT lt_content_tmp BY langu DESCENDING.
  DELETE ADJACENT DUPLICATES FROM lt_content_tmp COMPARING langu.

  &quot;Process for each language
  LOOP AT lt_content_tmp INTO ls_content.
    get_content_in_language(
      EXPORTING
        it_cr_status      = lt_cr_status
        it_content_body   = lt_content_body
        it_content_footer = lt_content_footer
        is_crequest       = ls_crequest    &quot; Change Request
        it_notes          = lt_notes    &quot; Change Request Note
        iv_name           = lv_name    &quot; Text Field of Length 60
        iv_supp_no        = lv_supp_no
        iv_language       = ls_content-langu
      IMPORTING
        et_body           = lt_body    &quot; Text Table
    ).
    CHECK lt_body IS NOT INITIAL.
    APPEND LINES OF lt_body TO et_body.
    REFRESH lt_body.
  ENDLOOP.
  APPEND &apos;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;&apos; TO et_body.

  &quot;Set mail Content
  go_mime_helper-&gt;set_main_html(
    EXPORTING
      content     = et_body    &quot; Objcont and Objhead as Table Type
      description = &apos;MDG Mail&apos;    &quot; Short description of contents
  ).

ENDMETHOD.</source>
  </method>
  <method CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="CONSTRUCTOR" SCONAME="IV_SERVICE_NAME" VERSION="1" LANGU="E" DESCRIPT="Service Name" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="USMD_SERVICE_NAME" PAROPTIONL="X"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="CONSTRUCTOR" SCONAME="IV_CR_NUMBER" VERSION="1" LANGU="E" DESCRIPT="Change Request" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="USMD_CREQUEST" PAROPTIONL="X"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="CONSTRUCTOR" SCONAME="IV_SUPP_NO" VERSION="1" LANGU="E" DESCRIPT="Account Number of Vendor or Creditor" CMPTYPE="1" MTDTYPE="2" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="LIFNR" PAROPTIONL="X"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="CONSTRUCTOR" SCONAME="IV_CR_REASON" VERSION="1" LANGU="E" DESCRIPT="Reason" CMPTYPE="1" MTDTYPE="2" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="USMD_REASON" PAROPTIONL="X"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="CONSTRUCTOR" SCONAME="IV_USER_RECEIPIENT" VERSION="1" LANGU="E" DESCRIPT="User Name in User Master Record" CMPTYPE="1" MTDTYPE="2" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XUBNAME" PAROPTIONL="X"/>
   <source>METHOD constructor.
  DATA : lv_extnumber TYPE balnrext.

  service_name = iv_service_name.
  crequest_number = iv_cr_number.
  vendor_no = iv_supp_no.
  gv_reason = iv_cr_reason.
  gv_user_receipt = iv_user_receipient.


  &quot;Create Key for Application log.
  CONCATENATE &apos;EMAIL&apos; iv_cr_number INTO lv_extnumber.

  &quot;Create Instance for Application Log.
  CREATE OBJECT go_appl_log
    EXPORTING
      iv_object    = yif_md00_bp_constants=&gt;appl_log_obj-ymd00_suppl                 &quot; Application log: Object name (Application code)
      iv_subobject = yif_md00_bp_constants=&gt;appl_log_subobj-email                 &quot; Application Log: Subobject
      iv_extnumber = lv_extnumber.                 &quot; Application Log: External ID
ENDMETHOD.</source>
  </method>
  <method CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_CONTENT_IN_LANGUAGE" VERSION="1" LANGU="E" DESCRIPT="Get Email Content for Given Language" EXPOSURE="0" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_CONTENT_IN_LANGUAGE" SCONAME="IT_CR_STATUS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="LTT_CR_STAT_DESC"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_CONTENT_IN_LANGUAGE" SCONAME="IT_CONTENT_BODY" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="LTT_EMAIL_CONTENT"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_CONTENT_IN_LANGUAGE" SCONAME="IT_CONTENT_FOOTER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="LTT_EMAIL_CONTENT"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_CONTENT_IN_LANGUAGE" SCONAME="IS_CREQUEST" VERSION="1" LANGU="E" DESCRIPT="Change Request" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="USMD_S_CREQUEST"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_CONTENT_IN_LANGUAGE" SCONAME="IT_NOTES" VERSION="1" LANGU="E" DESCRIPT="Change Request Note" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="USMD_T_CREQUEST_NOTE"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_CONTENT_IN_LANGUAGE" SCONAME="IV_NAME" VERSION="1" LANGU="E" DESCRIPT="Text Field of Length 60" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="TEXT60"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_CONTENT_IN_LANGUAGE" SCONAME="IV_SUPP_NO" VERSION="1" LANGU="E" DESCRIPT="Account Number of Vendor or Creditor" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="LIFNR"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_CONTENT_IN_LANGUAGE" SCONAME="IV_LANGUAGE" VERSION="1" LANGU="E" DESCRIPT="Language Key" CMPTYPE="1" MTDTYPE="0" EDITORDER="8 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SPRAS"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_CONTENT_IN_LANGUAGE" SCONAME="ET_BODY" VERSION="1" LANGU="E" DESCRIPT="Text Table" CMPTYPE="1" MTDTYPE="0" EDITORDER="9 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BCSY_TEXT"/>
   <source>METHOD GET_CONTENT_IN_LANGUAGE.
    DATA : ls_cr_status TYPE lty_cr_stat_desc,
           lv_status    TYPE string,
           ls_body      TYPE soli,
           ls_content   TYPE lty_email_content,
           lv_cr        TYPE usmd_crequest,
           ls_notes     LIKE LINE OF it_notes.

    &quot;Crequest
    CALL FUNCTION &apos;CONVERSION_EXIT_ALPHA_OUTPUT&apos;
      EXPORTING
        input  = crequest_number
      IMPORTING
        output = lv_cr.

    &quot;Get CR Status in English.
    READ TABLE it_cr_status INTO ls_cr_status WITH KEY langu = iv_language.
    IF sy-subrc EQ 0.
      lv_status = ls_cr_status-txtmi.
    ENDIF.

    &quot;Build email body in English
    LOOP AT it_content_body INTO ls_content WHERE langu EQ iv_language AND input_type(4) EQ &apos;BODY&apos;.
      CONCATENATE ls_content-content &apos;&lt;BR&gt;&apos; INTO ls_body-line.
      REPLACE ALL OCCURRENCES OF &apos;&lt;CREQ_DESC&gt;&apos; IN ls_body-line WITH is_crequest-usmd_creq_text.
      REPLACE ALL OCCURRENCES OF &apos;&lt;CREQ_STATUS&gt;&apos; IN ls_body-line WITH lv_status.
      REPLACE ALL OCCURRENCES OF &apos;&lt;CR_TYPE&gt;&apos; IN ls_body-line WITH is_crequest-usmd_creq_type.
      REPLACE ALL OCCURRENCES OF &apos;&lt;CREQUEST&gt;&apos; IN ls_body-line WITH lv_cr.
      REPLACE ALL OCCURRENCES OF &apos;&lt;CREQUEST_0&gt;&apos; IN ls_body-line WITH crequest_number.
      REPLACE ALL OCCURRENCES OF &apos;&lt;SUPP_NO&gt;&apos; IN ls_body-line WITH  iv_supp_no.
      REPLACE ALL OCCURRENCES OF &apos;&lt;SUPP_NAME&gt;&apos; IN ls_body-line WITH  iv_name.
      IF ls_content-content EQ &apos;&lt;NOTE&gt;&apos;.
        LOOP AT it_notes INTO ls_notes.
          ls_body-line = ls_notes-usmd_note.
          CONCATENATE ls_body-line &apos;&lt;BR&gt;&apos; INTO ls_body-line.
          APPEND ls_body TO et_body.
          CLEAR ls_body.
        ENDLOOP.
        CONTINUE.
      ENDIF.
      APPEND ls_body TO et_body.
      CLEAR ls_body.
    ENDLOOP.

    &quot;Add Footer for English Language
    LOOP AT it_content_footer INTO ls_content WHERE langu EQ iv_language.
      CONCATENATE ls_content-content &apos;&lt;BR&gt;&apos; INTO ls_body-line.
      APPEND ls_body TO et_body.
      CLEAR ls_body.
    ENDLOOP.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_CREQUEST_DATA" VERSION="1" LANGU="E" DESCRIPT="Get Change Request Data" EXPOSURE="0" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_CREQUEST_DATA" SCONAME="EV_NAME" VERSION="1" LANGU="E" DESCRIPT="Text field" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TEXT60"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_CREQUEST_DATA" SCONAME="ET_NOTES" VERSION="1" LANGU="E" DESCRIPT="Change Request Note" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="USMD_T_CREQUEST_NOTE"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_CREQUEST_DATA" SCONAME="ES_CREQUEST" VERSION="1" LANGU="E" DESCRIPT="Change Request" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="USMD_S_CREQUEST"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_CREQUEST_DATA" SCONAME="ET_CR_STATUS" VERSION="1" LANGU="E" DESCRIPT="Crequest Status" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="LTT_CR_STAT_DESC"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_CREQUEST_DATA" SCONAME="EV_VENDOR_NO" VERSION="1" LANGU="E" DESCRIPT="Account Number of Vendor or Creditor" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="LIFNR"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_CREQUEST_DATA" SCONAME="EV_REASON_DESC" VERSION="1" LANGU="E" DESCRIPT="Description (medium text)" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="USMD_TXTMI"/>
   <source>METHOD get_crequest_data.

  DATA : BEGIN OF ls_sales,
           sales TYPE numc2,
         END OF ls_sales,
         lt_sales LIKE TABLE OF ls_sales.

  DATA: lo_crequest    TYPE REF TO if_usmd_crequest_api,
        lt_entity      TYPE usmd_t_crequest_entity,
        ls_entity      TYPE usmd_s_crequest_entity,
        lo_gov_api     TYPE REF TO if_usmd_gov_api,
        lt_entity_data TYPE usmd_ts_entity_data_all,
        ls_entity_data TYPE usmd_sx_entity_data_all,
        lr_bpcompny    TYPE REF TO data,
        lv_localinput  TYPE if_fdt_types=&gt;element_text,
        lr_address     TYPE REF TO data,
        ls_salesline   TYPE lty_salesline.

  FIELD-SYMBOLS : &lt;lft_address&gt; TYPE ANY TABLE,
                  &lt;lfs_address&gt; TYPE any,
                  &lt;lfv_name1&gt;   TYPE any,
                  &lt;lfv_name2&gt;   TYPE any,
                  &lt;ft_bpcompny&gt; TYPE ANY TABLE,
                  &lt;fs_bpcompny&gt; TYPE any,
                  &lt;fv_bpcompny&gt; TYPE any.

  CONSTANTS : lc_agentdt TYPE if_fdt_types=&gt;element_text VALUE &apos;AGENTDT&apos;,
              lc_langu   TYPE langu VALUE &apos;EN&apos;.

  CHECK crequest_number IS NOT INITIAL.
***** Initiate the class and take CR master data
  CALL METHOD cl_usmd_crequest_api=&gt;get_instance
    EXPORTING
      iv_crequest          = crequest_number
    IMPORTING
      re_inst_crequest_api = lo_crequest.

  &quot;Get Crequest data
  CALL METHOD lo_crequest-&gt;read_crequest
    IMPORTING
      es_crequest = es_crequest.

  &quot;Set Reason to global variable.
  gv_reason = es_crequest-usmd_reason.
  gv_crtype = es_crequest-usmd_creq_type.
**** This method return the CR entity values
  CALL METHOD lo_crequest-&gt;read_objectlist
    EXPORTING
      iv_entity_type = yif_md00_bp_constants=&gt;entity_type-bp_header
    IMPORTING
      et_entity      = lt_entity.

***   Reading supplier code from CR
  READ TABLE lt_entity INTO ls_entity WITH KEY usmd_entity = yif_md00_bp_constants=&gt;entity_type-bp_header. &quot;#EC CI_SORTSEQ
  IF sy-subrc = 0.
    ev_vendor_no = ls_entity-usmd_value.
  ENDIF.

*** Initiate the class to fetch CR data based on entity type
  TRY.
      CALL METHOD cl_usmd_gov_api=&gt;get_instance
        EXPORTING
          iv_model_name = yif_md00_bp_constants=&gt;data_model-bp
        RECEIVING
          ro_gov_api    = lo_gov_api.
    CATCH cx_usmd_gov_api .
  ENDTRY.

******  Get exception and Incompleteness notes
  TRY.
      CALL METHOD lo_gov_api-&gt;get_notes
        EXPORTING
          iv_crequest_id   = crequest_number
        RECEIVING
          rt_crequest_note = et_notes.
    CATCH cx_usmd_gov_api_core_error .
  ENDTRY.

*** Fetch CR data and read its entity
  CALL METHOD lo_gov_api-&gt;if_usmd_gov_api_cr_data~get_crequest_data
    EXPORTING
      iv_crequest_id          = crequest_number
    IMPORTING
      et_entity_data_inactive = lt_entity_data.

*** Get Address Data Name1 &amp; Name2
  READ TABLE lt_entity_data INTO ls_entity_data
                            WITH KEY usmd_entity = yif_md00_bp_constants=&gt;entity_type-bp_header
                                     struct      = &apos;KATTR&apos;
                                     usmd_entity_cont = yif_md00_bp_constants=&gt;entity_type-bp_centrl.
  IF sy-subrc = 0.
    ASSIGN ls_entity_data-r_data-&gt;* TO &lt;lft_address&gt;.
    CREATE DATA lr_address LIKE TABLE OF &lt;lft_address&gt;.
    ASSIGN lr_address-&gt;* TO &lt;lfs_address&gt;.
    LOOP AT &lt;lft_address&gt; ASSIGNING &lt;lfs_address&gt;.
      ASSIGN COMPONENT yif_md00_bp_constants=&gt;bp_centrl-name_org1 OF STRUCTURE &lt;lfs_address&gt; TO &lt;lfv_name1&gt;.
      ASSIGN COMPONENT yif_md00_bp_constants=&gt;bp_centrl-name_org2 OF STRUCTURE &lt;lfs_address&gt; TO &lt;lfv_name2&gt;.
    ENDLOOP.
    CHECK &lt;lfv_name1&gt; IS ASSIGNED AND &lt;lfv_name2&gt; IS ASSIGNED.
    CONCATENATE &lt;lfv_name1&gt; &lt;lfv_name2&gt; INTO ev_name SEPARATED BY space.
  ELSE.
    SELECT SINGLE name1
      FROM lfa1
      INTO ev_name
      WHERE lifnr EQ ev_vendor_no.
  ENDIF.

  &quot;Get CR Status Description.
  SELECT langu txtmi
    FROM usmd130t
    INTO TABLE et_cr_status
    WHERE usmd_creq_status EQ es_crequest-usmd_creq_status.
  IF sy-subrc NE 0.
    REFRESH  et_cr_status.
  ENDIF.

  &quot;Get CR Reson Description
  get_cr_lob(
    IMPORTING
      ev_reason_desc = ev_reason_desc                 &quot; Description (medium text)
  ).
ENDMETHOD.</source>
  </method>
  <method CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_CR_LOB" VERSION="1" LANGU="E" DESCRIPT="Get CR LOB" EXPOSURE="0" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_CR_LOB" SCONAME="EV_REASON_DESC" VERSION="1" LANGU="E" DESCRIPT="Description (medium text)" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="USMD_TXTMI"/>
   <source>METHOD get_cr_lob.
    IF count( val   = gv_crtype regex = &apos;MCD&apos; ) NE 0.
      ev_reason_desc = yif_md00_bp_constants=&gt;lob-mcc_de.
    ELSEIF count( val   = gv_crtype regex = &apos;MID&apos; ) NE 0.
      ev_reason_desc = yif_md00_bp_constants=&gt;lob-mcc_iu.
    ELSEIF count( val   = gv_crtype regex = &apos;RED&apos; ) NE 0.
      ev_reason_desc = yif_md00_bp_constants=&gt;lob-real_de.
    ELSEIF count( val   = gv_crtype regex = &apos;HDD&apos; ) NE 0.
      ev_reason_desc = yif_md00_bp_constants=&gt;lob-hos_digi_de.
    ELSEIF count( val   = gv_crtype regex = &apos;MGD&apos; ) NE 0.
      ev_reason_desc = yif_md00_bp_constants=&gt;lob-mag_de.
    ELSEIF count( val   = gv_crtype regex = &apos;MMD&apos; ) NE 0.
      ev_reason_desc = yif_md00_bp_constants=&gt;lob-mkt_de.
    ENDIF.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_EMAIL_CONTENT_FROM_BRF" VERSION="1" LANGU="E" DESCRIPT="Get Content from  BRF+ Table" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_EMAIL_CONTENT_FROM_BRF" SCONAME="IV_SERVICENAME" VERSION="1" LANGU="E" DESCRIPT="Text field" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TEXT" PAROPTIONL="X"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_EMAIL_CONTENT_FROM_BRF" SCONAME="ET_CONTENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="LTT_EMAIL_CONTENT"/>
   <source>METHOD GET_EMAIL_CONTENT_FROM_BRF.
    DATA:lv_timestamp  TYPE timestamp,
         lt_name_value TYPE abap_parmbind_tab,
         ls_name_value TYPE abap_parmbind,
         lr_data       TYPE REF TO data,
         lx_fdt        TYPE REF TO cx_fdt,
         la_output     TYPE if_fdt_types=&gt;element_text,
         la_localinput TYPE if_fdt_types=&gt;element_text,
         la_output3    TYPE if_fdt_types=&gt;element_text,
         la_output4    TYPE if_fdt_types=&gt;element_text,
         ls_content    LIKE LINE OF et_content.
    FIELD-SYMBOLS : &lt;lt_data&gt;   TYPE ANY TABLE,
                    &lt;ls_data&gt;   TYPE any,
                    &lt;lv_fields&gt; TYPE any.
****************************************************************************************************
* All method calls within one processing cycle calling the same function must use the same timestamp.
* For subsequent calls of the same function, we recommend to use the same timestamp for all calls.
* This is to improve the system performance.
****************************************************************************************************
* If you are using structures or tables without DDIC binding, you have to declare the respective types
* by yourself. Insert the according data type at the respective source code line.
****************************************************************************************************
    GET TIME STAMP FIELD lv_timestamp.
****************************************************************************************************
* Process a function without recording trace data, passing context data objects via a name/value table.
****************************************************************************************************
* Prepare function processing:
****************************************************************************************************

    ls_name_value-name = &apos;LOCALINPUT&apos;.
    IF iv_servicename IS NOT INITIAL.
      la_localinput = iv_servicename.
    ELSE.
      la_localinput = service_name.
    ENDIF.
    GET REFERENCE OF la_localinput INTO lr_data.
    ls_name_value-value = lr_data.
    INSERT ls_name_value INTO TABLE lt_name_value.
*****************************************************************************************************
* Create the data to store the result value after processing the function
* You can skip the following call, if you already have
* a variable for the result. Please replace also the parameter
* EA_RESULT in the method call CL_FDT_FUNCTION_PROCESS=&gt;PROCESS
* with the desired variable.
****************************************************************************************************
    cl_fdt_function_process=&gt;get_data_object_reference( EXPORTING iv_function_id      = yif_md00_bp_constants=&gt;brf_fm-get_email_content
                                                                  iv_data_object      = &apos;_V_RESULT&apos;
                                                                  iv_timestamp        = lv_timestamp
                                                                  iv_trace_generation = abap_false
                                                        IMPORTING er_data             = lr_data ).
    ASSIGN lr_data-&gt;* TO &lt;lt_data&gt;.
    TRY.
        cl_fdt_function_process=&gt;process( EXPORTING iv_function_id = yif_md00_bp_constants=&gt;brf_fm-get_email_content
                                                    iv_timestamp   = lv_timestamp
                                          IMPORTING ea_result      = &lt;lt_data&gt;
                                          CHANGING  ct_name_value  = lt_name_value ).
      CATCH cx_fdt INTO lx_fdt.
****************************************************************************************************
* You can check CX_FDT-&gt;MT_MESSAGE for error handling.
****************************************************************************************************
    ENDTRY.

    &quot;Pass result data to calling program.
    CHECK &lt;lt_data&gt; IS ASSIGNED AND &lt;lt_data&gt; IS NOT INITIAL.
    LOOP AT &lt;lt_data&gt; ASSIGNING &lt;ls_data&gt;.
      &quot;Get Language Key
      ASSIGN COMPONENT &apos;LANGUAGE&apos; OF STRUCTURE &lt;ls_data&gt; TO &lt;lv_fields&gt;.
      CHECK &lt;lv_fields&gt; IS ASSIGNED.
      ls_content-langu = &lt;lv_fields&gt;.
      UNASSIGN &lt;lv_fields&gt;.

      &quot;Get Current System &amp; Generic fields.
      ASSIGN COMPONENT &apos;OUTPUT&apos; OF STRUCTURE &lt;ls_data&gt; TO &lt;lv_fields&gt;.
      CHECK &lt;lv_fields&gt; IS ASSIGNED.
      IF &lt;lv_fields&gt; IS NOT INITIAL AND &lt;lv_fields&gt; NE sy-sysid.
        CONTINUE.
      ENDIF.
      ls_content-system = &lt;lv_fields&gt;.
      UNASSIGN &lt;lv_fields&gt;.

      &quot;Get Input Type
      ASSIGN COMPONENT &apos;OUTPUT3&apos; OF STRUCTURE &lt;ls_data&gt; TO &lt;lv_fields&gt;.
      CHECK &lt;lv_fields&gt; IS ASSIGNED.
      ls_content-input_type = &lt;lv_fields&gt;.
      UNASSIGN &lt;lv_fields&gt;.

      &quot;Get Body Line
      ASSIGN COMPONENT &apos;OUTPUT4&apos; OF STRUCTURE &lt;ls_data&gt; TO &lt;lv_fields&gt;.
      CHECK &lt;lv_fields&gt; IS ASSIGNED.
      ls_content-content = &lt;lv_fields&gt;.
      UNASSIGN &lt;lv_fields&gt;.

      APPEND ls_content TO et_content.
      CLEAR ls_content.
    ENDLOOP.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_EMAIL_FROM_USERID" VERSION="1" LANGU="E" DESCRIPT="Get Email ID from SAP User ID" EXPOSURE="0" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_EMAIL_FROM_USERID" SCONAME="IT_USERS" VERSION="1" LANGU="E" DESCRIPT="Table for Users" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="USMD_T_USER"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_EMAIL_FROM_USERID" SCONAME="CT_RECIPIENT" VERSION="1" LANGU="E" DESCRIPT="Email Address" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="LTT_EMAIL_ADDR"/>
   <source>METHOD get_email_from_userid.
    DATA : ls_recipient LIKE LINE OF ct_recipient,
           ls_email     TYPE bapiaddr3,
           lt_return    TYPE TABLE of bapiret2.

    LOOP AT it_users INTO DATA(ls_user).
**** BAPI use to get email id of user
      CLEAR ls_email.
      CALL FUNCTION &apos;BAPI_USER_GET_DETAIL&apos;
        EXPORTING
          username      = ls_user
          cache_results = abap_true
        IMPORTING
          address       = ls_email
        TABLES
          return        = lt_return.
      IF ls_email-e_mail IS NOT INITIAL.
        ls_recipient-email = ls_email-e_mail. &quot; email id of user
        APPEND ls_recipient TO ct_recipient.
        CLEAR ls_recipient.
      ENDIF.
    ENDLOOP.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_IMAGE_FOR_BODY" VERSION="1" LANGU="E" DESCRIPT="Get Image for Email Body" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_IMAGE_FOR_BODY" SCONAME="IT_CONTENT_BODY" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="LTT_EMAIL_CONTENT"/>
   <source>METHOD GET_IMAGE_FOR_BODY.
    DATA : lr_mime_api     TYPE REF TO if_mr_api,
           lv_folder       TYPE boole_d,
           lv_content      TYPE xstring,
           lv_loio         TYPE skwf_io,
           lt_solix        TYPE solix_tab,
           ls_solix        LIKE LINE OF lt_solix,
           ls_content_body LIKE LINE OF it_content_body,
           lv_obj_len      TYPE so_obj_len,
           lv_graphic_len  TYPE tdlength,
           lv_xstr         TYPE xstring,
           lv_offset       TYPE i,
           lv_length       TYPE i,
           lv_diff         TYPE i,
           lv_url          TYPE string,
           lv_filename     TYPE mime_text,
           lv_content_id   TYPE mime_cntid.


    &quot;Get Image to be added to mail from MIME Repository
    lr_mime_api =  cl_mime_repository_api=&gt;if_mr_api~get_api( ).
    CHECK lr_mime_api IS BOUND .
    CREATE OBJECT go_mime_helper .

    LOOP AT it_content_body INTO ls_content_body WHERE input_type = gc_image.
      CLEAR lv_url.
      CONCATENATE &apos;/sap/public/&apos; ls_content_body-content INTO lv_url.
      lr_mime_api-&gt;get(
        EXPORTING
          i_url                  =  lv_url   &quot; Object URL
        IMPORTING
          e_is_folder            =  lv_folder   &quot; X - Object is folder, &apos;&apos; - Otherwise file
          e_content              =  lv_content   &quot; Object Contents
          e_loio                 =  lv_loio   &quot; Technical Object Key Incl. MIME-GUID
        EXCEPTIONS
          parameter_missing      = 1
          error_occured          = 2
          not_found              = 3
          permission_failure     = 4
          OTHERS                 = 5
      ).

      lv_obj_len = xstrlen( lv_content ).
      lv_graphic_len = xstrlen( lv_content ).
      CLEAR lv_xstr.
      lv_xstr = lv_content(lv_obj_len).
      lv_offset = 0.
      lv_length = 255.
      CLEAR lt_solix[].
      WHILE lv_offset &lt; lv_graphic_len.
        lv_diff = lv_graphic_len - lv_offset.
        IF lv_diff &gt; lv_length.
          ls_solix-line = lv_xstr+lv_offset(lv_length).
        ELSE.
          ls_solix-line = lv_xstr+lv_offset(lv_diff).
        ENDIF.
        APPEND ls_solix TO lt_solix.
        CLEAR ls_solix.
        ADD lv_length TO lv_offset.
      ENDWHILE.

      lv_filename = ls_content_body-content.
      lv_content_id = ls_content_body-content.
      go_mime_helper-&gt;add_binary_part(
        EXPORTING
          content      = lt_solix    &quot; Objcont and Objhead as Table Type
          filename     = lv_filename    &quot; File Name (Proposal Only)
          extension    = &apos;jpg&apos;    &quot; File extension for PC application
          description  = &apos;Graphic in JPG Format&apos;    &quot; Short description of contents
          content_type = &apos;image/jpg&apos;    &quot; HTML content type
          length       = lv_obj_len    &quot; Size of Document Content
          content_id   = lv_content_id    &quot; BCOM: Bodypart Content ID
      ).
      REFRESH lt_solix.
    ENDLOOP.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_USERS_EMAIL" VERSION="1" LANGU="E" DESCRIPT="Get Receipient Users" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_USERS_EMAIL" SCONAME="ET_RECIPIENT" VERSION="1" LANGU="E" DESCRIPT="Email Address" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="LTT_EMAIL_ADDR"/>
   <source>METHOD get_users_email.
  TYPES : BEGIN OF lty_roles,
            roles TYPE agr_name,
          END OF lty_roles.

  DATA : ls_email_fm  TYPE ymd00_email_fm,
         lt_username  TYPE TABLE OF xubname,
         lt_email     TYPE TABLE OF ad_smtpadr,
         ls_recipient LIKE LINE OF et_recipient,
         lt_roles     TYPE TABLE OF lty_roles,
         ls_message   LIKE LINE OF gt_message.

  SELECT SINGLE *
    FROM ymd00_email_fm
    INTO ls_email_fm
    WHERE service_name = service_name.
  IF sy-subrc NE 0.
    &quot;Write Application log to maintain entry in table
    ls_message-id = yif_md00_bp_constants=&gt;message-msg_class.
    ls_message-type = yif_md00_bp_constants=&gt;message-msg_error.
    ls_message-number = &apos;100&apos;.
    ls_message-message_v1 = service_name.
    APPEND ls_message TO gt_message.
    CLEAR ls_message.
    IF 1 = 2.
      MESSAGE e100(ymd00_supp) WITH service_name.
    ENDIF.
    RETURN.
  ELSEIF ls_email_fm-stop_email IS NOT INITIAL.
    &quot;Write Application log to maintain entry in table
    ls_message-id = yif_md00_bp_constants=&gt;message-msg_class.
    ls_message-type = yif_md00_bp_constants=&gt;message-msg_error.
    ls_message-number = &apos;101&apos;.
    ls_message-message_v1 = service_name.
    APPEND ls_message TO gt_message.
    CLEAR ls_message.
    IF 1 = 2.
      MESSAGE e101(ymd00_supp) WITH service_name.
    ENDIF.
    RETURN.
  ENDIF.

  &quot;Get Workflow Agents
  IF ls_email_fm-to_agent_user IS NOT INITIAL.
    get_workflow_agent( CHANGING ct_recipient = et_recipient ).
  ENDIF.

  &quot;Get User ID
  IF ls_email_fm-to_user_id IS NOT INITIAL.
    SPLIT ls_email_fm-to_user_id AT &apos;;&apos; INTO TABLE lt_username.
    get_email_from_userid(
      EXPORTING
        it_users     = lt_username                 &quot; Table for Users
      CHANGING
        ct_recipient = et_recipient                 &quot; Email Address
    ).
  ENDIF.

  &quot;Get Email list
  IF ls_email_fm-to_email IS NOT INITIAL.
    SPLIT ls_email_fm-to_email AT &apos;;&apos; INTO TABLE lt_email.
    LOOP AT lt_email INTO DATA(ls_email).
      ls_recipient-email = ls_email.
      APPEND ls_recipient TO et_recipient.
      CLEAR ls_recipient.
    ENDLOOP.
  ENDIF.

  &quot;Get Roles
  IF ls_email_fm-to_role IS NOT INITIAL.
    REFRESH lt_username.
    &quot;Get User IDs from Roles.
    SPLIT ls_email_fm-to_role AT &apos;;&apos; INTO TABLE lt_roles.
    SELECT DISTINCT uname                                &quot;#EC CI_BYPASS
      FROM agr_users
      INTO TABLE lt_username
      FOR ALL ENTRIES IN lt_roles
      WHERE agr_name = lt_roles-roles
        AND to_dat GE sy-datum.
    IF sy-subrc EQ 0.
      get_email_from_userid(
        EXPORTING
          it_users     = lt_username                 &quot; Table for Users
        CHANGING
          ct_recipient = et_recipient                 &quot; Email Address
      ).
    ENDIF.
  ENDIF.
ENDMETHOD.</source>
  </method>
  <method CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_WORKFLOW_AGENT" VERSION="1" LANGU="E" DESCRIPT="Get Workflow Agents" EXPOSURE="0" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="GET_WORKFLOW_AGENT" SCONAME="CT_RECIPIENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="LTT_EMAIL_ADDR"/>
   <source>METHOD get_workflow_agent.
    DATA : ls_workitem   TYPE usmd2400,
           lv_current_wi TYPE swr_struct-workitemid,
           lt_recipients TYPE TABLE OF swragent,
           lt_users      TYPE usmd_t_user.

    &quot;Get Top Workitem ID
    SELECT SINGLE *
      FROM usmd2400
      INTO ls_workitem
      WHERE usmd_crequest = crequest_number.
    CHECK sy-subrc EQ 0.

    &quot;Get Current Workitem ID
    SELECT SINGLE wi_id
      FROM swwwihead
      INTO lv_current_wi
      WHERE wi_Stat = &apos;READY&apos;
        AND top_wi_id = ls_workitem-top_wi_id.
    CHECK sy-subrc EQ 0.

    &quot;Get Recipient User ID
    CALL FUNCTION &apos;SAP_WAPI_WORKITEM_RECIPIENTS&apos;
      EXPORTING
        workitem_id = lv_current_wi
      TABLES
        recipients  = lt_recipients.

    CHECK lt_recipients IS NOT INITIAL.
    LOOP AT lt_recipients INTO DATA(ls_recipients).
      APPEND ls_recipients-objid TO lt_users.
    ENDLOOP.

    get_email_from_userid(
      EXPORTING
        it_users     =  lt_users                 &quot; Table for Users
      CHANGING
        ct_recipient =  ct_recipient                &quot; Email Address
    ).
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="SEND_EMAIL" VERSION="1" LANGU="E" DESCRIPT="Send Email" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="SEND_EMAIL" SCONAME="IT_BODY" VERSION="1" LANGU="E" DESCRIPT="Text Table" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BCSY_TEXT"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="SEND_EMAIL" SCONAME="IV_SUBJECT" VERSION="1" LANGU="E" DESCRIPT="Comment" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CHAR50"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="SEND_EMAIL" SCONAME="IT_RECIPIENT" VERSION="1" LANGU="E" DESCRIPT="E-Mail Address" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="LTT_EMAIL_ADDR"/>
   <source>METHOD SEND_EMAIL.
**    DATA delcaration
    DATA : lo_document     TYPE REF TO cl_document_bcs,
           lo_send_request TYPE REF TO cl_bcs,
           lo_sender       TYPE REF TO cl_sapuser_bcs,
           lo_recipient    TYPE REF TO if_recipient_bcs,
           ls_recipient    TYPE lty_email_addr.

    CONSTANTS : lv_type  TYPE so_obj_tp VALUE &apos;HTM&apos;,
                lv_send  TYPE c VALUE &apos;X&apos;,
                lv_space TYPE c VALUE &apos; &apos;.

*** This method to use initialize the mail properties
    TRY .
        lo_document = cl_document_bcs=&gt;create_from_multirelated(
                    i_subject          = iv_subject
                    i_multirel_service = go_mime_helper
                ).
      CATCH cx_document_bcs.  &quot;
      CATCH cx_bcom_mime.  &quot;
      CATCH cx_gbt_mime.  &quot;
    ENDTRY.

*** This method Initialize and prepare the email to be send
    TRY .
        lo_send_request = cl_bcs=&gt;create_persistent( ).
      CATCH cx_send_req_bcs.
    ENDTRY.

*** Create document which to be send
    TRY .
        CALL METHOD lo_send_request-&gt;set_document( lo_document ).
      CATCH cx_send_req_bcs.
    ENDTRY.

*** Sender addess, Currently we use username
    TRY .
        lo_sender = cl_sapuser_bcs=&gt;create( sy-uname ).
      CATCH cx_address_bcs.
    ENDTRY.

*** Prepare the sender details
    TRY .
        CALL METHOD lo_send_request-&gt;set_sender
          EXPORTING
            i_sender = lo_sender.
      CATCH cx_send_req_bcs.
    ENDTRY.

    LOOP AT it_recipient INTO ls_recipient.
*** recipient to whom email goes
      TRY .
          lo_recipient = cl_cam_address_bcs=&gt;create_internet_address( ls_recipient-email ).
*** Add recipient address to send request
          CALL METHOD lo_send_request-&gt;add_recipient
            EXPORTING
              i_recipient  = lo_recipient
              i_express    = lv_send &quot; email in &quot;TO&quot;
              i_copy       = lv_space
              i_blind_copy = lv_space
              i_no_forward = lv_space.
        CATCH cx_address_bcs.
        CATCH cx_send_req_bcs.    &quot;
      ENDTRY.

    ENDLOOP.

    TRY .
***        Send the email
        lo_send_request-&gt;set_send_immediately( lv_send ).
        CALL METHOD lo_send_request-&gt;send( ).
      CATCH cx_send_req_bcs.
    ENDTRY.
***    COMMIT WORK AND WAIT .
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="TRIGGER_MAIL" VERSION="1" LANGU="E" DESCRIPT="Trigger Mail for given Servicename &amp; CR." EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="TRIGGER_MAIL" SCONAME="IV_SUBJECT" VERSION="1" LANGU="E" DESCRIPT="Comment" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CHAR50" PAROPTIONL="X"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="TRIGGER_MAIL" SCONAME="IT_BODY" VERSION="1" LANGU="E" DESCRIPT="Text Table" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BCSY_TEXT" PAROPTIONL="X"/>
   <parameter CLSNAME="YCL_MD00_TRIGGER_EMAIL" CMPNAME="TRIGGER_MAIL" SCONAME="EV_SUCCESS" VERSION="1" LANGU="E" DESCRIPT="Success Flag" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BOOLEAN"/>
   <source>METHOD trigger_mail.
  DATA : lt_body      TYPE bcsy_text,
         lv_subject	  TYPE char50,
         lt_recipient TYPE ltt_email_addr,
         ls_message   LIKE LINE OF gt_message.

  &quot;Set success flag.
  ev_success = abap_true.

  &quot;Addition for using in Comparison summary email
  IF it_body IS NOT INITIAL AND iv_subject IS NOT INITIAL.
    lt_body = it_body.
    lv_subject = iv_subject.
  ELSE.
    &quot;Build Email Content.
    build_email_content(
      IMPORTING
        et_body   = lt_body    &quot; Text Table
        ev_subject = lv_subject    &quot; Comment
    ).
  ENDIF.
  IF lt_body IS INITIAL.
    ls_message-id = yif_md00_bp_constants=&gt;message-msg_class.
    ls_message-type = yif_md00_bp_constants=&gt;message-msg_error.
    ls_message-number = &apos;097&apos;.
    ls_message-message_v1 = service_name.
    APPEND ls_message TO gt_message.
    CLEAR ls_message.
    IF 1 = 2.
      MESSAGE e097(ymd00_supp) WITH service_name.
    ENDIF.
    CLEAR ev_success.
  ELSEIF lv_subject IS INITIAL.
    ls_message-id = yif_md00_bp_constants=&gt;message-msg_class.
    ls_message-type = yif_md00_bp_constants=&gt;message-msg_error.
    ls_message-number = &apos;098&apos;.
    ls_message-message_v1 = service_name.
    APPEND ls_message TO gt_message.
    CLEAR ls_message.
    IF 1 = 2.
      MESSAGE e098(ymd00_supp) WITH service_name.
    ENDIF.
    CLEAR ev_success.
  ENDIF.

  &quot;Get Recipient Email List
  get_users_email(
    IMPORTING
      et_recipient = lt_recipient    &quot; Email Address
  ).
  SORT lt_recipient.
  DELETE ADJACENT DUPLICATES FROM lt_recipient.
  IF lt_recipient IS INITIAL.
    ls_message-id = yif_md00_bp_constants=&gt;message-msg_class.
    ls_message-type = yif_md00_bp_constants=&gt;message-msg_error.
    ls_message-number = &apos;099&apos;.
    ls_message-message_v1 = service_name.
    APPEND ls_message TO gt_message.
    CLEAR ls_message.
    IF 1 = 2.
      MESSAGE e099(ymd00_supp) WITH service_name.
    ENDIF.
    CLEAR ev_success.
  ENDIF.

  IF ev_success IS INITIAL.
    &quot;Log errrors to application log.
    CALL METHOD go_appl_log-&gt;write_log
      EXPORTING
        it_message = gt_message.
  ELSE.
    &quot;Send Email.
    send_email(
      EXPORTING
        it_body      = lt_body       &quot; Text Table
        iv_subject   = lv_subject    &quot; Comment
        it_recipient = lt_recipient  &quot; E-Mail Address
    ).
  ENDIF..
ENDMETHOD.</source>
  </method>
 </CLAS>
 <TABL TABNAME="YMD00_EMAIL_FM" DDLANGUAGE="E" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" CLIDEP="X" DDTEXT="MDG Email Framework" AUTHCLASS="00" MAINFLAG="X" CONTFLAG="C" PROZPUFF="000" EXCLASS="0">
  <dd09l TABNAME="YMD00_EMAIL_FM" AS4LOCAL="A" AS4VERS="0000" TABKAT="0" TABART="APPL0" SCHFELDANZ="000" PROTOKOLL="X" BUFALLOW="N" ROWORCOLST="C"/>
  <dd03p TABNAME="YMD00_EMAIL_FM" FIELDNAME="MANDT" DDLANGUAGE="E" POSITION="0001" KEYFLAG="X" ROLLNAME="MANDT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MANDT" ROUTPUTLEN="000000" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CLNT" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T000" MASK="  CLNTE" MASKLEN="0000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client" DOMNAME3L="MANDT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="YMD00_EMAIL_FM" FIELDNAME="SERVICE_NAME" DDLANGUAGE="E" POSITION="0002" KEYFLAG="X" ROLLNAME="USMD_SERVICE_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000120" NOTNULL="X" DOMNAME="USMD_SERVICE_NAME" ROUTPUTLEN="000000" HEADLEN="12" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" OUTPUTLEN="000060" DECIMALS="000000" ENTITYTAB="USMD201C_SSW" MASK="  CHARE" MASKLEN="0000" DDTEXT="Service Name" REPTEXT="Service Name" SCRTEXT_S="Serv Name" SCRTEXT_M="Service Name" SCRTEXT_L="Service Name" DOMNAME3L="USMD_SERVICE_NAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="YMD00_EMAIL_FM" FIELDNAME="TO_AGENT_USER" DDLANGUAGE="E" POSITION="0003" ROLLNAME="YMD00_TO_WF_AG" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="BOOLEAN" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="TO WF Agent" REPTEXT="TO WF Agent" SCRTEXT_S="TO WF Agen" SCRTEXT_M="TO WF Agent" SCRTEXT_L="TO WF Agent" DOMMASTER="D" DOMNAME3L="BOOLEAN" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="YMD00_EMAIL_FM" FIELDNAME="TO_USER_ID" DDLANGUAGE="E" POSITION="0004" ROLLNAME="YMD00_TO_USER" ADMINFIELD="0" INTTYPE="C" INTLEN="000200" DOMNAME="CHAR100" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000100" OUTPUTLEN="000100" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="TO SAP User ID" REPTEXT="TO SAP User ID" SCRTEXT_S="TO SAP ID" SCRTEXT_M="TO SAP User ID" SCRTEXT_L="TO SAP User ID" DOMNAME3L="CHAR100" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="YMD00_EMAIL_FM" FIELDNAME="TO_EMAIL" DDLANGUAGE="E" POSITION="0005" ROLLNAME="YMD00_TO_EMAIL" ADMINFIELD="0" INTTYPE="C" INTLEN="000500" DOMNAME="CHAR250" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000250" OUTPUTLEN="000250" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="TO Email ID" REPTEXT="TO Email ID" SCRTEXT_S="TO EmailID" SCRTEXT_M="TO Email ID" SCRTEXT_L="TO Email ID" DOMNAME3L="CHAR250" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="YMD00_EMAIL_FM" FIELDNAME="TO_ROLE" DDLANGUAGE="E" POSITION="0006" ROLLNAME="YMD00_TO_ROLE" ADMINFIELD="0" INTTYPE="C" INTLEN="000200" DOMNAME="CHAR100" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000100" OUTPUTLEN="000100" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="TO SAP Role" REPTEXT="TO SAP Role" SCRTEXT_S="TO SAP Rol" SCRTEXT_M="TO SAP Role" SCRTEXT_L="TO SAP Role" DOMNAME3L="CHAR100" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="YMD00_EMAIL_FM" FIELDNAME="CC_AGENT_USER" DDLANGUAGE="E" POSITION="0007" ROLLNAME="YMD00_CC_WF_AG" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="BOOLEAN" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="CC WF Agent" REPTEXT="CC WF Agent" SCRTEXT_S="CC WF Agen" SCRTEXT_M="CC WF Agent" SCRTEXT_L="CC WF Agent" DOMMASTER="D" DOMNAME3L="BOOLEAN" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="YMD00_EMAIL_FM" FIELDNAME="CC_USER_ID" DDLANGUAGE="E" POSITION="0008" ROLLNAME="YMD00_CC_USER" ADMINFIELD="0" INTTYPE="C" INTLEN="000200" DOMNAME="CHAR100" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000100" OUTPUTLEN="000100" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="CC SAP User ID" REPTEXT="CC SAP User ID" SCRTEXT_S="CC SAP ID" SCRTEXT_M="CC SAP User ID" SCRTEXT_L="CC SAP User ID" DOMNAME3L="CHAR100" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="YMD00_EMAIL_FM" FIELDNAME="CC_EMAIL" DDLANGUAGE="E" POSITION="0009" ROLLNAME="YMD00_CC_EMAIL" ADMINFIELD="0" INTTYPE="C" INTLEN="000500" DOMNAME="CHAR250" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000250" OUTPUTLEN="000250" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="CC Email ID" REPTEXT="CC Email ID" SCRTEXT_S="CC EmailID" SCRTEXT_M="CC Email ID" SCRTEXT_L="CC Email ID" DOMNAME3L="CHAR250" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="YMD00_EMAIL_FM" FIELDNAME="CC_ROLE" DDLANGUAGE="E" POSITION="0010" ROLLNAME="YMD00_CC_ROLE" ADMINFIELD="0" INTTYPE="C" INTLEN="000200" DOMNAME="CHAR100" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000100" OUTPUTLEN="000100" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="CC SAP Role" REPTEXT="CC SAP Role" SCRTEXT_S="CC SAP Rol" SCRTEXT_M="CC SAP Role" SCRTEXT_L="CC SAP Role" DOMNAME3L="CHAR100" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="YMD00_EMAIL_FM" FIELDNAME="STOP_EMAIL" DDLANGUAGE="E" POSITION="0011" ROLLNAME="YMD00_STOP_MAIL" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="CHAR1" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Stop Mail" REPTEXT="Stop Mail for Service" SCRTEXT_S="Stop Mail" SCRTEXT_M="Stop Mail for Servic" SCRTEXT_L="Stop Mail for Service" DOMNAME3L="CHAR1" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
 </TABL>
 <DTEL ROLLNAME="YMD00_TO_WF_AG" DDLANGUAGE="E" DOMNAME="BOOLEAN" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="TO WF Agent" REPTEXT="TO WF Agent" SCRTEXT_S="TO WF Agen" SCRTEXT_M="TO WF Agent" SCRTEXT_L="TO WF Agent" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" VALEXI="X" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="YMD00_TO_EMAIL" DDLANGUAGE="E" DOMNAME="CHAR250" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="TO Email ID" REPTEXT="TO Email ID" SCRTEXT_S="TO EmailID" SCRTEXT_M="TO Email ID" SCRTEXT_L="TO Email ID" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000250" DECIMALS="000000" OUTPUTLEN="000250" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="YMD00_TO_ROLE" DDLANGUAGE="E" DOMNAME="CHAR100" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="TO SAP Role" REPTEXT="TO SAP Role" SCRTEXT_S="TO SAP Rol" SCRTEXT_M="TO SAP Role" SCRTEXT_L="TO SAP Role" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000100" DECIMALS="000000" OUTPUTLEN="000100" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="YMD00_CC_WF_AG" DDLANGUAGE="E" DOMNAME="BOOLEAN" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="CC WF Agent" REPTEXT="CC WF Agent" SCRTEXT_S="CC WF Agen" SCRTEXT_M="CC WF Agent" SCRTEXT_L="CC WF Agent" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" VALEXI="X" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="YMD00_CC_USER" DDLANGUAGE="E" DOMNAME="CHAR100" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="CC SAP User ID" REPTEXT="CC SAP User ID" SCRTEXT_S="CC SAP ID" SCRTEXT_M="CC SAP User ID" SCRTEXT_L="CC SAP User ID" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000100" DECIMALS="000000" OUTPUTLEN="000100" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="YMD00_CC_EMAIL" DDLANGUAGE="E" DOMNAME="CHAR250" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="CC Email ID" REPTEXT="CC Email ID" SCRTEXT_S="CC EmailID" SCRTEXT_M="CC Email ID" SCRTEXT_L="CC Email ID" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000250" DECIMALS="000000" OUTPUTLEN="000250" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="YMD00_CC_ROLE" DDLANGUAGE="E" DOMNAME="CHAR100" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="CC SAP Role" REPTEXT="CC SAP Role" SCRTEXT_S="CC SAP Rol" SCRTEXT_M="CC SAP Role" SCRTEXT_L="CC SAP Role" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000100" DECIMALS="000000" OUTPUTLEN="000100" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="YMD00_STOP_MAIL" DDLANGUAGE="E" DOMNAME="CHAR1" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="Stop Mail" REPTEXT="Stop Mail for Service" SCRTEXT_S="Stop Mail" SCRTEXT_M="Stop Mail for Servic" SCRTEXT_L="Stop Mail for Service" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" REFKIND="D">
  <tpara/>
 </DTEL>
</nugget>
